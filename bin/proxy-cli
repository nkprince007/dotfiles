#!/bin/bash
# Reset
NC='\033[0m'       # Text Reset

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

#Special symbols
Tick_Mark='\xE2\x9C\x94'                        # Check mark
Cross='\xE2\x9D\x8C'                            # Cross mark
Green_Tick_Mark='\033[0;32m\xE2\x9C\x94\033[0m' # Green check mark
Red_Cross='\033[0;31m\xE2\x9D\x8C\033[0m'       # Red cross mark


echo -e "${Green}$1 ${NC}"
if [ ! $1 ]; then
    echo -e "${Red}Incorrect usage: Please enter the proxy you would like to set.${NC}"
    echo -e "${Red}Usage${NC}: ./cli-proxy ${Cyan}'<proxy>'${NC}"
    echo "Example: ./cli-proxy 'http://172.31.1.4:8080'" 
else
    if [ $1 == 'reset' ]; then
        npm config --global delete proxy
        npm config --global delete https-proxy
        npm config delete proxy
        npm config delete https-proxy
        git config --global --unset http.proxy 
        git config --global --unset https.proxy
        git config --unset http.proxy
        git config --unset https.proxy
        echo -e "${Green}Proxies have been successfully reset for ${BPurple} npm ${Green} and ${BPurple}git.${NC}"
    else
        npm config --global set proxy $1
        npm config --global set https-proxy $1
        npm config set proxy $1
        npm config set https-proxy $1
        git config --global http.proxy $1
        git config --global https.proxy $1
        git config http.proxy $1
        git config https.proxy $1
        yarn config set proxy $1
        yarn config set https-proxy $1

        npmHTTP="$(npm config get proxy)"
        npmHTTPS="$(npm config get https-proxy)"
        npmHTTPG="$(npm config --global get proxy)"
        npmHTTPSG="$(npm config --global get https-proxy)"
        gitHTTP="$(git config http.proxy)"
        gitHTTPS="$(git config https.proxy)"
        gitHTTPG="$(git config --global http.proxy)"
        gitHTTPSG="$(git config --global https.proxy)"
        yarnHTTP="$(yarn config get proxy)"
        yarnHTTPS="$(yarn config get https-proxy)"

        echo $npmHTTP
        if [ $npmHTTP == "$1/" ]; then
            echo -e "NPM user http proxy successfully set to $1 ${Green_Tick_Mark}}"
        fi
        if [ $npmHTTPS == "$1/" ]; then
            echo -e "NPM user https proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $gitHTTP == "$1" ]; then
            echo -e "Git user http proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $gitHTTPS == "$1" ]; then
            echo -e "Git user https proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $npmHTTPG == "$1/" ]; then
            echo -e "NPM global http proxy successfully set to $1 ${Green_Tick_Mark}}"
        fi
        if [ $npmHTTPSG == "$1/" ]; then
            echo -e "NPM global https proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $gitHTTPG == "$1" ]; then
            echo -e "Git global http proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $gitHTTPSG == "$1" ]; then
            echo -e "Git global https proxy successfully set to $1 ${Green_Tick_Mark}"
        fi
        if [ $yarnHTTP == "$1" ]; then
            echo -e "Yarn http proxy set to $1 ${Green_Tick_Mark}"
        fi
        if [ $yarnHTTPS == "$1" ]; then
            echo -e "Yarn https proxy set to $1 ${Green_Tick_Mark}"
        fi
    fi
fi
